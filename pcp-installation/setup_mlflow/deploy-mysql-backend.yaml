---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mlflow-db
  namespace: kubeflow
imagePullSecrets:
- name: artifactory-creds-kubeflow
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-db
  namespace: kubeflow
spec:
  ports:
  - port: 3316
    protocol: TCP
    targetPort: 3306
  selector:
    app: mlflow-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-db
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: mlflow-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mlflow-db
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: mlflow-db
      containers:
      - image: mysql:5.6 #docker.artifactory.2b82.aws.cloud.airbus.corp/mysql:5.6
        name: mlflow-db
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "mlflow"
        - name: MYSQL_USER
          value: "mlflow"
        - name: MYSQL_PASSWORD
          value: "12341234"
        ports:
        - containerPort: 3306
          name: mlflow-db
        volumeMounts:
        - name: mlflow-db-persistent-storage
          mountPath: /var/lib/mysql
        readinessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysql -D ${MYSQL_DATABASE} -u root -p${MYSQL_ROOT_PASSWORD} -e 'SELECT 1'"
          periodSeconds: 2
          failureThreshold: 10
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          periodSeconds: 2
          failureThreshold: 10
        startupProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          periodSeconds: 15
          failureThreshold: 60
      volumes:
      - name: mlflow-db-persistent-storage
        persistentVolumeClaim:
          claimName: mlflow-db-pv-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mlflow-db-pv-volume
  namespace: kubeflow
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-db-pv-claim
  namespace: kubeflow
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi


#import mysql.connector
#
#mydb = mysql.connector.connect(
#    host="mlflow-db.kubeflow.svc.cluster.local",
#    port=3316,
#    user="mlflow",
#    passwd="12341234"
# )
#
#print(mydb)
#mysqladmin ping -u mlflow -p12341234
#mysql -D mlflow -u mlflow -p12341234 -e 'SELECT 1'
#mysql -u root -p${MYSQL_ROOT_PASSWORD}
#import sqlalchemy
#engine = sqlalchemy.create_engine('mysql+pymysql://mlflow:12341234@172.20.83.163:3316/mlflow')
#
#CREATE USER 'mlflow2'@'%%' IDENTIFIED BY '12341234';
#FLUSH PRIVILEGES;
#
#try:
#    sqlalchemy.inspect(engine)
#except Exception as e:
#    print(e)